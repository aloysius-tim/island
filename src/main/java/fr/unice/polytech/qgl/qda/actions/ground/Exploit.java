package fr.unice.polytech.qgl.qda.actions.ground;

import fr.unice.polytech.qgl.qda.Game.AvailableActions;
import fr.unice.polytech.qgl.qda.Island.IslandMap;
import fr.unice.polytech.qgl.qda.Island.Ressource;
import fr.unice.polytech.qgl.qda.actions.Action;
import fr.unice.polytech.qgl.qda.strategy.GroundPhase.SpecificPattern.FindStrategy;
import org.json.JSONObject;

/**
 * IslandProject created on 17/12/2015 by Keynes Timothy - Aloysius_tim
 */
public class Exploit extends Action implements IGroundStrategy{
    private final JSONObject extras;
    private final int amount;
    private final Ressource ressource;

    public Exploit(IslandMap islandMap, JSONObject action, JSONObject acknowledgeResult) {
        super(islandMap, action, acknowledgeResult);
        this.actionType= AvailableActions.EXPLOIT;

        extras = acknowledgeResult.getJSONObject("extras");
        amount = extras.getInt("amount");

        this.ressource=Ressource.valueOf(action.getJSONObject("parameters").getString("resource").toUpperCase());

        //{ "action": "exploit", "parameters": { "resource": "FUR" }}

        this.islandMap.updateCollectedRessource(ressource, amount);

        //Debug.println("CollectedRessources="+islandMap.getCollectedRessources().toString());
    }

    @Override
    public void findStrategy(FindStrategy strategy) {
        boolean primary = false;

        strategy.updateList(amount);

        for(Ressource res : strategy.getTileList().keySet()){
            if(res.getTypeRessource() == Ressource.TypeRessource.PRIMARY){
                primary = true;
                break;
            }
        }
        if(!primary){
            strategy.getBufferActions().clear();
            strategy.setEndOfStrat(true);
        }

        else{
            if(strategy.getHuntedBiome() == null){
                strategy.getBufferActions().clear();
                strategy.setEndOfStrat(true);
                return;
            }
            strategy.setAvoid(false);
            strategy.getBufferActions().add(Scout.buildAction(strategy.getHuntedBiome().getDirection()));
        }
    }

    public static JSONObject buildAction(Ressource ressource) {
        JSONObject cmd = new JSONObject();
        cmd.put("action", "exploit");
        JSONObject parameters = new JSONObject();
        parameters.put("resource", ressource.name());

        cmd.put("parameters", parameters);
        return cmd;
    }
}
